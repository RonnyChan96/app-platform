<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="modelengine.fit.jade.aipp.model.mapper.UserModelMapper">
    <resultMap id="BaseResultMap" type="modelengine.fit.jade.aipp.model.po.UserModelPo">
        <id property="id" column="id"/>
        <result property="createdAt" column="created_at"/>
        <result property="userId" column="user_id"/>
        <result property="modelId" column="model_id"/>
        <result property="apiKey" column="api_key"/>
        <result property="isDefault" column="is_default"/>
    </resultMap>

    <sql id="Base_Column_List">
        created_at, user_id, model_id, api_key, is_default
    </sql>

    <select id="listUserModels" resultMap="BaseResultMap">
        SELECT
            u.id, u.created_at, u.user_id, u.model_id, u.api_key, u.is_default
        FROM
            t_app_engine_user_model u
        JOIN
            t_app_engine_model m ON u.model_id = m.model_id
        WHERE
            u.user_id = #{userId}
            <if test="type != null">
                AND m.type = #{type}
            </if>
    </select>

    <select id="getDefault" resultMap="BaseResultMap">
        SELECT
            u.created_at,
            u.user_id,
            u.model_id,
            u.api_key,
            u.is_default
        FROM
            t_app_engine_user_model u
        JOIN
            t_app_engine_model m ON u.model_id = m.model_id
        WHERE
            u.user_id = #{userId}
            AND u.is_default = 1
            <if test="type != null">
                AND m.type = #{type}
            </if>
    </select>

    <select id="hasDefaultModel" resultType="boolean">
        SELECT EXISTS (
            SELECT 1
            FROM
                t_app_engine_user_model u
                JOIN
                t_app_engine_model m ON u.model_id = m.model_id
            WHERE
                u.user_id = #{userId}
                AND u.is_default = 1
                <if test="type != null">
                    AND m.type = #{type}
                </if>
        )
    </select>

    <insert id="insertUserModel" parameterType="modelengine.fit.jade.aipp.model.po.UserModelPo">
        INSERT INTO t_app_engine_user_model (user_id, model_id, api_key, is_default, created_by, updated_by)
        VALUES (#{userId}, #{modelId}, #{apiKey}, #{isDefault}, #{createdBy}, #{updatedBy})
    </insert>

    <delete id="deleteByModelId">
        DELETE FROM t_app_engine_user_model
        WHERE model_id = #{modelId}
    </delete>

    <select id="findLatestUserModel" resultType="modelengine.fit.jade.aipp.model.po.UserModelPo">
        SELECT created_at, user_id, model_id, api_key, is_default
        FROM t_app_engine_user_model
        WHERE user_id = #{userId}
        ORDER BY created_at DESC LIMIT 1
    </select>

    <update id="setDefault" parameterType="map">
        UPDATE t_app_engine_user_model
        SET is_default = CASE WHEN model_id = #{modelId} THEN 1 ELSE 0 END
        WHERE user_id = #{userId}
    </update>
</mapper>